{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","history","useHistory","AuthStore","useStores","name","initialValues","remember","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","res","push","catch","error","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"0OAMMA,EAAUC,IAAOC,IAAV,2MASPC,EAAQF,IAAOG,GAAV,2EAKLC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KAqGKI,UAjGG,WAChB,IAAMC,EAAUC,cACRC,EAAcC,cAAdD,UAkCR,OACE,eAACd,EAAD,WACE,cAACG,EAAD,2BACA,8CACME,GADN,IAEEW,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZC,SA1CW,SAACC,GAChBC,QAAQC,IAAI,4BACZR,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACPC,MAAK,SAACC,GACLjB,EAAQkB,KAAK,QAEdC,OAAM,SAACC,GACNX,QAAQC,IAAIU,EAAO,gCAkCnBC,eA9BiB,SAACC,GACtBb,QAAQC,IAAI,UAAWY,IAsBrB,UASE,kBAAMC,KAAN,CACEC,MAAM,qBACNpB,KAAK,WACLqB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0DAEX,CACEC,UApCa,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAC9BF,QAAQC,OAAO,4CACjBD,QAAQG,aAuBX,SAaE,wBAGF,kBAAMZ,KAAN,CACEC,MAAM,eACNpB,KAAK,WACLqB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,oDAEX,CAAES,IAAK,EAAGT,QAAS,qDACnB,CAAEU,IAAK,GAAIV,QAAS,uDATxB,SAYE,kBAAOW,SAAP,MAGF,kBAAMf,KAAN,CACEC,MAAM,2BACNpB,KAAK,kBACLqB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,wCArDnB,SAAC,GAAD,IAAGY,EAAH,EAAGA,cAAH,MAAwB,CAC9CX,UAD8C,SACpCC,EAAMC,GACd,OAAIS,EAAc,cAAgBT,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,kDA+CpB,SAKE,kBAAOK,SAAP,MAGF,kBAAMf,KAAN,2BAAe1B,GAAf,aACE,mBAAQ2C,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/14.2d7c3267.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Button } from \"antd\";\nimport { useStores } from \"../stores\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  padding: 20px;\n  margin: 30px auto;\n  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n  border-radius: 4px;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 18,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 18,\n  },\n};\n\nconst Component = () => {\n  const history = useHistory();\n  const { AuthStore } = useStores();\n  const onFinish = (values) => {\n    console.log(\"注册成功\");\n    AuthStore.setUsername(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.register()\n      .then((res) => {\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error, \"注册失败\");\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  // 用户名校验\n  const validateUserName = (rule, value) => {\n    if (/\\W/.test(value)) return Promise.reject(\"只能是字母数字下划线\");\n    if (value.length < 4 || value.length > 10)\n      return Promise.reject(\"长度为4~10个字符\");\n    return Promise.resolve();\n  };\n\n  // 确认密码校验\n  const validateConfirm = ({ getFieldValue }) => ({\n    validator(rule, value) {\n      if (getFieldValue(\"password\") === value) return Promise.resolve();\n      return Promise.reject(\"两次密码不一致\");\n    },\n  });\n\n  return (\n    <Wrapper>\n      <Title>注册</Title>\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"请输入你的用户名！\",\n            },\n            {\n              validator: validateUserName,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"请输入你的密码！\",\n            },\n            { min: 4, message: \"密码长度不能小于4\" },\n            { max: 10, message: \"密码长度不能大于10\" },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          label=\"确认密码\"\n          name=\"confirmPassword\"\n          rules={[{ required: true, message: \"请输入密码！\" }, validateConfirm]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            注册\n          </Button>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default Component;\n"],"sourceRoot":""}